<?xml version="1.0"?> 

<web-app version="2.4" 
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
						http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

<!-- 
    <context-param>
		<description>
			Comma separated list of URIs of (additional) faces config files. (e.g. /WEB-INF/my-config.xml) See JSF 1.0
			PRD2, 10.3.2
		</description>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>
           /WEB-INF/conf/faces/faces-config.xml
          ,/WEB-INF/conf/faces/faces-bean-common-config.xml
          ,/WEB-INF/conf/faces/faces-menu-config.xml          
          ,/WEB-INF/conf/faces/faces-renderkit-config.xml
          ,/WEB-INF/conf/faces/faces-converter-config.xml
          ,/WEB-INF/conf/faces/faces-validator-config.xml
        </param-value>
    </context-param>
          ,/WEB-INF/conf/faces/account/faces-navigation-config.xml
          ,/WEB-INF/conf/faces/account/faces-bean-config.xml
 -->
    <context-param>
		<description>State saving method: "client" or "server" (= default) See JSF Specification 2.5.2</description>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>

    <context-param>
		<description>
			If true, rendered HTML code will be formatted, so that it is "human readable". i.e. additional line
			separators and whitespace will be written, that do not influence the HTML code. Default: "true"
		</description>
        <param-name>org.apache.myfaces.PRETTY_HTML</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
		<description>
			If true, a javascript function will be rendered that is able to restore the former vertical scroll on every
			request. Convenient feature if you have pages with long lists and you do not want the browser page to always
			jump to the top if you trigger a link or button action that stays on the same page. Default: "false"
		</description>
        <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
		<description>
			This parameter tells MyFaces if javascript code should be allowed in the rendered HTML output. If javascript
			is allowed, command_link anchors will have javascript code that submits the corresponding form. If
			javascript is not allowed, the state saving info and nested parameters will be added as url parameters.
			Default: "true"
		</description>
        <param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
        <param-value>true</param-value>
    </context-param>
    
    <context-param>
		<description>
			This parameter tells MyFaces if javascript code should be allowed in the rendered HTML output. If javascript
			is allowed, command_link anchors will have javascript code that submits the corresponding form. If
			javascript is not allowed, the state saving info and nested parameters will be added as url parameters.
			Default: "false"

			Setting this param to true should be combined with STATE_SAVING_METHOD "server" for best results.

			This is an EXPERIMENTAL feature. You also have to enable the detector_filter/filter mapping below to get
			JavaScript detection working.
		</description>
        <param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
        <param-value>false</param-value>
    </context-param>

	<context-param>
		<param-name>facelets.SKIP_COMMENTS</param-name>
		<param-value>true</param-value>
	</context-param>
	
	<context-param>
        <param-name>com.code.aon.report.config.file</param-name>
        <param-value>/WEB-INF/conf/report-config.xml</param-value>
    </context-param>

	<context-param>
		<description>Use Documents Saved as *.xhtml</description>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>

	<context-param>
		<description>
			Setting this to true will cause the FaceletViewHandler to print out debug information in an easy to use
			screen when an error occurs during the rendering process.
		</description>
		<param-name>facelets.DEVELOPMENT</param-name>
		<param-value>true</param-value>
	</context-param>

	<context-param>
		<description>
			A semicolon (;) delimitted list of paths to Facelet tag libraries, relative to your application's root.
			These libraries will be loaded when the first request hits the FaceletViewHandler for page compilation.
		</description>
		<param-name>facelets.LIBRARIES</param-name>
		<param-value>/WEB-INF/tomahawk.taglib.xml</param-value>
	</context-param>

	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/facelet/error/JavaError.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/facelet/error/HttpError.jsp?errorCode=404</location>
	</error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/facelet/error/HttpError.jsp?errorCode=403</location>
	</error-page>

   <!-- Extensions Filter -->
	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
	    <init-param>
	        <param-name>maxFileSize</param-name>
	        <param-value>20m</param-value>
	    </init-param>
	</filter>

    <!-- Filter Mappings -->

	<!-- extension mapping for adding <script/>, <link/>, and other resource tags to JSF-pages  -->
	<filter-mapping>
	    <filter-name>MyFacesExtensionsFilter</filter-name>
	    <!-- servlet-name must match the name of your javax.faces.webapp.FacesServlet entry -->
	    <servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>
	
	<!-- extension mapping for serving page-independent resources (javascript, stylesheets, images, etc.)  -->
	<filter-mapping>
	    <filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
	</filter-mapping>
	<!-- extension mapping for adding <script/>, <link/>, and other resource tags to JSF-pages  -->
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>*.jsf</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

  	<!-- Listener, that does all the startup work (configuration, init). -->
	<listener>
		<listener-class>
			org.apache.myfaces.webapp.StartupServletContextListener
		</listener-class>
	</listener>

	<!-- Bean Loader Listener -->
    <listener>
       <listener-class>
           com.code.aon.ui.common.listener.BeanRegisterContextListener
       </listener-class>
    </listener>

    <context-param>
       <param-name>config-file</param-name>
       <param-value>/WEB-INF/conf/bean_config.xml</param-value>
    </context-param> 

    <!-- Faces Servlet -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Lookup Bean Servlet -->
	<servlet>
		<servlet-name>LookupBeanServlet</servlet-name>
		<servlet-class>com.code.aon.ui.form.lookup.LookupBeanServlet</servlet-class>
	</servlet>

  	<!-- extension mapping -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.faces</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.res</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jaas</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>

	<servlet-mapping>
		<servlet-name>LookupBeanServlet</servlet-name>
		<url-pattern>*.lookupBean</url-pattern>
	</servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>
